@page "/monitoringCasette"
@using ATMBank_.Data
@using ATMBank_.Models;
@inject CasetteService casetteService
@inject NavigationManager NavigationManager

<PageTitle>Monitoring ATM Bank</PageTitle>

<h1>Monitoring Sisa Uang Kertas</h1>

<p>Berikut adalah jumlah uang kertas yang masih ada pada mesin ATM ini</p>



@if (CasObj is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <NavLink href="casetteForm">
        <button type="submit" class="btn btn-primary mb-3">Tambahkan Uang Kertas</button>
    </NavLink>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nominal</th>
                <th>Jumlah</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var cas in CasObj)
            {
                <tr>
                    <td>@cas.Id</td>
                    <td>Rp. @cas.Nominal.ToString("#,##0")</td>
                    <td>@cas.Jumlah</td>
                    <td>
                        <a href="updateCasette/@cas.Id">
                            <span type="button" class="btn btn-primary mb-3"><i class="oi oi-book"></i></span>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Casette>? CasObj;

    protected override async Task OnInitializedAsync()
    {
        CasObj = await Task.Run(() => casetteService.GetAllCasette());
    }
}
